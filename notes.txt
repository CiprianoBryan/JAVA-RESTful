###############################################################################
############################ SPRING INITIALIZR ################################
###############################################################################

Nos ayuda a generar un proyecto con las dependencias que necesitaremos, como:

Spring Web: Para construir una web, incluye RESTful, Spring MVC, 
            Apache Tomcat como contenedor integrado predeterminado.
Spring Boot DevTools: Brinda un aplicación rápida.
Spring Data JPA: Para la conexión a la BD.
H2 Database: Base de datos en memoria.

###############################################################################
####################### Internationalization - i18n ###########################
###############################################################################

Nos ayuda a personalizar nuestros servicios para diferentes personas.

###############################################################################
################################ OPEN API #####################################
###############################################################################

info: {}, información sobre la api
servers: [], servidores en los que corre la aplicación
paths: {}, Los diferentes recursos que están expuestos (nombre recursos, status code, tipo)
components: {} esquemas que se están utilizando (tipo variables, restricciones)

Swagger: generación de Documentación en html a partir de código fuente

###############################################################################
########################## SPRING BOOT ACTUATOR ###############################
###############################################################################

Para monitorear las API´s presentes en nuestra aplicación

> Con Hal Explorer podemos explorar las APIs mostradas con actuator de una manera más
sencilla através del navegador.

###############################################################################
########################## SPRING BOOT SECURITY ###############################
###############################################################################

- Con esto controlamos el acceso a los endpoints
- Solo se puede consumir los endpoints si se cuenta con el usuario y contraseña

###############################################################################
############################### H2 DATABASE ###################################
###############################################################################

Base de datos en memoria
- Abrir en el navegador localhost:8080/h2-console y en JDBC URL: jdbc:h2:mem:testdb (Lo indicado en application.properties)

###############################################################################
############################# SPRING DATA JPA #################################
###############################################################################

 > Para poder hablar con un entity necesitamos crear un repositorio de datos de Spring.
 > El repositorio es un interface

                        @RestController       Interface
                        Endpoints             Métodos que corren SQL
                        @RequestMapping       @Repository
                       *----------*          *---------------------*
  USER <-- BROWSER <-- | resource | <------- |      repository     |
                       *----------*          *---------------------*
                                                        ^
                                                        |
                                             *----------------------*
                                             |        entity        |
                                             *----------------------*
                                             @Entity, @Id
                                             Clase que representa a una tabla de la DB
